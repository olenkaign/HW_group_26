
TXT
 1. Создать внешний репозиторий c названием TXT.
Перейти на на https://githab.com и войти в свой аккаунт. Нажать кнопку New repository. Ввести имя репозитория TXT и нажать create repository
done
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/olenkaign/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
cd txt
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
 git commit new.txt -m "HW2_Git_intro"

 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat > new.txt
name_Olga
surname_Ignateva
age_42
one_dog
300_000_rubles
Ctrl+C
 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "HW2_Git_intro"
git push

 9. Создать файл preferences.txt
cat > preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
favorite_movie_eat,pray,love
favorite_TV_series_magniflcent_centuri
favorite_food_sushi
favorite_time_of_year_summer
country_Italy
Ctrl+C

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > sklls.txt
git_hub
git_bush
postman
python
Ctrl+C

 12. Сделать коммит в одну строку.
git add . && git commit -am "HW2_Git_intro"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
Done

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Done
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Done
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Done
 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull


JSON
 4. Создать внешний репозиторий c названием JSON.
Done
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/olenkaign/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
cd json
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "HW2_Git"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat > new.json
{
  "name": "Olga",
  "surname": "Ignateva",
  "age": 42,
  "pet": "one_dog",
  "income": "300000_rubles"
}
Ctrl+C

 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "HW2_Git"
git push

 12. Создать файл preferences.json
cat > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
{
"favorite_movie":"eat,pray,love",
"favorite_TV_series":"magniflcent_centuri",
"favorite_food":"sushi",
"favorite_time_of_year":"summer",
"country":"Italy"
}
Ctrl+C

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > sklls.json
{
"skiis":["git_hub", "git_bush", "postman", "python"]

}
Ctrl+C

 15. Отправить сразу 2 файла на внешний репозиторий.
git add . && git commit -am "HW2_Git" && git push

 16. На веб интерфейсе создать файл bug_report.json.
touch bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
git add bug_report.json
git commit -m "Update bug_report.json"
git push


 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
    
"Title":"BUG-REPORT",

"ID":1,
"Title":"CART-Unable to add new item to a cart",
"Environment":["MacBook Air 2018", "MacOS Big Sur", "Yandex Browser"],
"Steps to reproduce":[
"1-Go to product page",
"2-Press to 'Add to cart button",
"3-Go to cart"],
"Priority":"High",
"Severity":"Critical",
"Expected Result":"The cart containes 1 item",
"Actual Result":"The cart containes 0 itemsthon"
  
}
Done
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Done
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
Done

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/olenkaign/XML.git


 23. Внутри локального XML создать файл “new.xml”.
cd xml
touch new.xml


 24. Добавить файл под гит.
git add new.xml


 25. Закоммитить файл.
git commit -m "HW2_Git"

 26. Отправить файл на внешний GitHub репозиторий.
git push


 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<?xml version="1.0" encoding="UTF-8"?>
<note>
  <name>Olga</name>
  <surname>Ignateva</surname>
  <age>42</age>
  <pet>one_dog</pet>
  <income>300000_rubles</income>
</note>

 28. Отправить изменения на внешний репозиторий.
git add new.xml && git commit -am "HW2_Git" && git push

 29. Создать файл preferences.xml
cat > preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<?xml version="1.0" encoding="UTF-8"?>
<note>
   <favorite_movie>eat_pray_love</favorite_movie>
   <favorite_TV_series>magniflcent_centuri</favorite_TV_series>
   <favorite_food>sushi</favorite_food>
   <favorite_time_of_year>summer</favorite_time_of_year>
   <country>Italy</country>
</note>
Ctrl+C
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > sklls.xml
<?xml version="1.0" encoding="UTF-8"?>
<note>
 <sklls>git_hub, git_bush, postman, python</sklls>
</note>	
Ctrl+C

 32. Сделать коммит в одну строку.
git add preferences.xml sklls.xml && git commit -am "HW2_Git"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
Done

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Done

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml version="1.0" encoding="UTF-8"?>
<note>
 <Title>BUG-REPORT</Title>
<ID>1</ID>
<Title>CART_Unable to add new item to a cart</Title>
<Environment>MacBook Air 2018, MacOS Big Sur, Yandex Browser</Environment>
<Steps_to_reproduce>1_Go to product page,2_Press to Add to cart button,3_Go to cart</Steps_to_reproduce>
<Priority>High</Priority>
<Severity>Critical</Severity>
<Expected_Result>The cart containes 1 item</Expected_Result>
<Actual_Result>The cart containes 0 itemsthon</Actual_Result>
</note>	

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Done
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
